<Activity mc:Ignorable="sap sap2010" x:Class="CalculateOneDay" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:udad="clr-namespace:UiPathTeam.Dates.Activities.Datetime;assembly=UiPathTeam.Dates.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_rowHistorical" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_dbConn" Type="InArgument(ui:DatabaseConnection)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>852,6582.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CalculateOneDay_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CalculateStockReturns" sap:VirtualizedContainerService.HintSize="721.6,6377.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="stockId" />
      <Variable x:TypeArguments="x:String" Name="stockTradeDate" />
      <Variable x:TypeArguments="x:Double" Name="stockAdjClose" />
      <Variable x:TypeArguments="sd:DataTable" Name="dbResultDT" />
      <Variable x:TypeArguments="x:String" Name="dbQuery" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsOneDay" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsOneMonth" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsSinceInception" />
      <Variable x:TypeArguments="x:Double" Name="stockPrevAdjClose" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsThreeMonth" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsSixMonth" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsOneYear" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsYearToDate" />
      <Variable x:TypeArguments="x:Double" Name="ReturnsAnnualised" />
      <Variable x:TypeArguments="x:Double" Name="daysDifference" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="680,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="CalculateReturns..." />
    <Assign sap:VirtualizedContainerService.HintSize="680,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[stockId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_rowHistorical(1).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="680,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[stockTradeDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_rowHistorical(2).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="680,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">[stockAdjClose]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(in_rowHistorical(7).ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Calculate 1 Day" sap:VirtualizedContainerService.HintSize="680,724.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Historical] WHERE StockId='" +stockId+"' and TradeDate&lt;'" +stockTradeDate+"' ORDER BY TradeDate DESC"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbResultDT]" DisplayName="Get Historical" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="577.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[dbQuery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If Condition="[dbResultDT.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="577.6,402.4" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Then>
          <Sequence DisplayName="Calculations" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[stockPrevAdjClose]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(dbResultDT(0)(7))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsOneDay]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[((stockAdjClose-stockPrevAdjClose)/stockPrevAdjClose)*100]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="Missing 1 Day data" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Calculate 1 Month" sap:VirtualizedContainerService.HintSize="680,724.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_25">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Historical] WHERE StockId='" +stockId+"' and TradeDate&lt;= DATEADD(DAY, -30, '" +stockTradeDate+"') ORDER BY TradeDate DESC"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbResultDT]" DisplayName="Get Historical" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="577.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="[dbQuery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If Condition="[dbResultDT.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="577.6,402.4" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <Sequence DisplayName="Calculations" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_22">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[stockPrevAdjClose]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(dbResultDT(0)(7))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsOneMonth]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[((stockAdjClose-stockPrevAdjClose)/stockPrevAdjClose)*100]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="Missing 1 Month data" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Calculate 3 Month" sap:VirtualizedContainerService.HintSize="680,724.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_26">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Historical] WHERE StockId='" +stockId+"' and TradeDate&lt;= DATEADD(DAY, -90, '" +stockTradeDate+"') ORDER BY TradeDate DESC"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbResultDT]" DisplayName="Get Historical" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="577.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="[dbQuery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If Condition="[dbResultDT.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="577.6,402.4" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <Sequence DisplayName="Calculations" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_27">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[stockPrevAdjClose]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(dbResultDT(0)(7))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_28">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsThreeMonth]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[((stockAdjClose-stockPrevAdjClose)/stockPrevAdjClose)*100]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="Missing 3 Month data" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Calculate 6 Month" sap:VirtualizedContainerService.HintSize="680,724.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_30">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Historical] WHERE StockId='" +stockId+"' and TradeDate&lt;= DATEADD(DAY, -180, '" +stockTradeDate+"') ORDER BY TradeDate DESC"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbResultDT]" DisplayName="Get Historical" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="577.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="[dbQuery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If Condition="[dbResultDT.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="577.6,402.4" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <Sequence DisplayName="Calculations" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_31">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[stockPrevAdjClose]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(dbResultDT(0)(7))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_32">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsSixMonth]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[((stockAdjClose-stockPrevAdjClose)/stockPrevAdjClose)*100]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="Missing 6 Month data" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Calculate 1 Year" sap:VirtualizedContainerService.HintSize="680,724.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_33">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Historical] WHERE StockId='" +stockId+"' and TradeDate&lt;= DATEADD(DAY, -365, '" +stockTradeDate+"') ORDER BY TradeDate DESC"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbResultDT]" DisplayName="Get Historical" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="577.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" Sql="[dbQuery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If Condition="[dbResultDT.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="577.6,402.4" sap2010:WorkflowViewState.IdRef="If_7">
        <If.Then>
          <Sequence DisplayName="Calculations" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_34">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[stockPrevAdjClose]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(dbResultDT(0)(7))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_35">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsOneYear]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[((stockAdjClose-stockPrevAdjClose)/stockPrevAdjClose)*100]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="Missing 1 Year data" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Calculate Year To Date" sap:VirtualizedContainerService.HintSize="680,724.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_36">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Historical] WHERE StockId='" +stockId+"' and TradeDate &gt;= DATEADD(yy, DATEDIFF(yy, 0, GETDATE()), 0) "]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbResultDT]" DisplayName="Get Historical" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="577.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7" Sql="[dbQuery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If Condition="[dbResultDT.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="577.6,402.4" sap2010:WorkflowViewState.IdRef="If_8">
        <If.Then>
          <Sequence DisplayName="Calculations" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[stockPrevAdjClose]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(dbResultDT(0)(7))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_38">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsYearToDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[((stockAdjClose-stockPrevAdjClose)/stockPrevAdjClose)*100]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="Missing Year to Date data" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Calculate Since Inception" sap:VirtualizedContainerService.HintSize="680,956" sap2010:WorkflowViewState.IdRef="Sequence_18">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="638.4,60" sap2010:WorkflowViewState.IdRef="Assign_39">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Historical] WHERE StockId='" +stockId+"'"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbResultDT]" DisplayName="Get Historical" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="638.4,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_8" Sql="[dbQuery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If Condition="[dbResultDT.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="638.4,633.6" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <Sequence DisplayName="Calculations" sap:VirtualizedContainerService.HintSize="364.8,484" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="323.2,60" sap2010:WorkflowViewState.IdRef="Assign_40">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[stockPrevAdjClose]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(dbResultDT(0)(7))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="323.2,60" sap2010:WorkflowViewState.IdRef="Assign_41">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsSinceInception]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[((stockAdjClose-stockPrevAdjClose)/stockPrevAdjClose)*100]</InArgument>
              </Assign.Value>
            </Assign>
            <udad:CompareDates Result="{x:Null}" CheckDay="True" CheckHours="False" CheckMinutes="False" CheckMonth="False" CheckSecondes="False" CheckYear="False" Date1DT="[DateTime.ParseExact(dbResultDT.Rows(0)(2).ToString, &quot;M/d/yyyy hh:mm:ss&quot;, System.Globalization.CultureInfo.InvariantCulture)]" Date2DT="[DateTime.ParseExact(in_rowHistorical(2).ToString, &quot;M/d/yyyy hh:mm:ss&quot;, System.Globalization.CultureInfo.InvariantCulture)]" DateDifference="[daysDifference]" DisplayName="Compare dates" sap:VirtualizedContainerService.HintSize="323.2,91.2" sap2010:WorkflowViewState.IdRef="CompareDates_1" OutputDateDifferenceUnits="Days" />
            <Assign sap:VirtualizedContainerService.HintSize="323.2,60" sap2010:WorkflowViewState.IdRef="Assign_42">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[ReturnsAnnualised]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[(Math.Pow((1+ReturnsSinceInception/100), (365/daysDifference))-1)*100]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="Missing Since Inception data" />
        </If.Else>
      </If>
    </Sequence>
    <Assign sap:VirtualizedContainerService.HintSize="680,64" sap2010:WorkflowViewState.IdRef="Assign_43">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">["INSERT INTO [Periodic] (StockId, TradeDate, OneDay, OneMonth, ThreeMonth, SixMonth, OneYear, YearToDate, SinceInception, AnnualisedReturns) VALUES ('"+
stockId.ToString + "', '" + 
stockTradeDate.ToString.Split(" "C)(0).ToString + "', '" + 
ReturnsOneDay.ToString + "', '" + 
ReturnsOneMonth.ToString  + "', '" +
ReturnsThreeMonth.ToString + "', '" + 
ReturnsSixMonth.ToString + "', '" + 
ReturnsOneYear.ToString + "', '" + 
ReturnsYearToDate.ToString + "', '" + 
ReturnsSinceInception.ToString + "', '" + 
ReturnsAnnualised.ToString +"')"]</InArgument>
      </Assign.Value>
    </Assign>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="680,64" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[&quot;StockId: &quot; + stockId + &#xD;&#xA;&quot;, TradeDate: &quot; + stockTradeDate.ToString.Split(&quot; &quot;C)(0).ToString + &#xD;&#xA;&quot;, 1 Day: &quot; + ReturnsOneDay.ToString + &#xD;&#xA;&quot;, 1 month: &quot; + ReturnsOneMonth.ToString + &#xD;&#xA;&quot;, 3 month: &quot; + ReturnsThreeMonth.ToString + &#xD;&#xA;&quot;, 6 month: &quot; + ReturnsSixMonth.ToString +&#xD;&#xA;&quot;, 1 Year: &quot; + ReturnsOneYear.ToString +&#xD;&#xA;&quot;, YTD: &quot; + ReturnsYearToDate.ToString + &#xD;&#xA;&quot;, Inception: &quot; + ReturnsSinceInception.ToString+&#xD;&#xA;&quot;, Annualised: &quot; + ReturnsAnnualised.ToString]" />
    <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[in_dbConn]" sap:VirtualizedContainerService.HintSize="680,89.6" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" Sql="[dbQuery]">
      <ui:ExecuteNonQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteNonQuery.Parameters>
    </ui:ExecuteNonQuery>
  </Sequence>
</Activity>