<Activity mc:Ignorable="sap sap2010" x:Class="UpdateStockPeriodic" this:UpdateStockPeriodic.in_stockId="1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_stockId" Type="InArgument(x:String)" />
    <x:Property Name="in_configDefaultDT" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>852,925.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>UpdateStockPeriodic_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="17">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Pre: in_stockId&#xA;&#xA;1. Get the last records of stock periodics.&#xA;2. Check if Historical has newer entries than stock's periodic by date.&#xA;3. For each new historical data, process calculations of each 1 day, 1 month, 3 month, 1 year, year to date, since inception and annualized returns.&#xA;3B. Save into periodics as new entry" DisplayName="UpdateStockPeriodic" sap:VirtualizedContainerService.HintSize="633.6,760.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbConn" />
      <Variable x:TypeArguments="sd:DataTable" Name="dbPeriodicResultDT" />
      <Variable x:TypeArguments="x:String" Name="dbQuery" />
      <Variable x:TypeArguments="sd:DataTable" Name="dbHistoricalResultDT" />
      <Variable x:TypeArguments="x:Int32" Name="newHistoricalCount" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,146 220,146</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID2</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">20,315.6</av:Point>
          <av:Size x:Key="ShapeSize">200,68.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">120,384.4 120,434.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="For each new record, Calculate" sap:VirtualizedContainerService.HintSize="740,674.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[newHistoricalCount&gt; 0]" sap:VirtualizedContainerService.HintSize="698.4,581.6" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dbHistoricalResultDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="424.8,432" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,283.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="returnsOneDay" />
                      <Variable x:TypeArguments="x:Double" Name="returnsOneMonth" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;Processing row: &quot; + (dbHistoricalResultDT.Rows.IndexOf(row)+1).ToString]" />
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CalculateReturns workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="CalculateStockReturns.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowHistorical">[row]</InArgument>
                        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_dbConn">[dbConn]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </If.Then>
          <If.Else>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="No newer historical records" />
          </If.Else>
        </If>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">20,434.4</av:Point>
              <av:Size x:Key="ShapeSize">200,22.4</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DatabaseDisconnect DatabaseConnection="[dbConn]" DisplayName="Disconnect" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:DatabaseDisconnect>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">20,65.6</av:Point>
          <av:Size x:Key="ShapeSize">200,160.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">120,226.4 120,315.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="1. Init values&#xA;2. Read Periodics database&#xA;3. Read Hisotrical database for entries newer than periodics" DisplayName="Init and Read Both Database" sap:VirtualizedContainerService.HintSize="200,160.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="sqlConnectionString" />
          <Variable x:TypeArguments="x:String" Name="providerName" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="648.8,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Calculate periodics for stockid=&quot; + in_stockId]" />
        <Assign sap:VirtualizedContainerService.HintSize="648.8,60" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[sqlConnectionString]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_configDefaultDT.Select("Fields='sqlConnectionString'")(0)(1).ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="648.8,60" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[providerName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_configDefaultDT.Select("Fields='providerName'")(0)(1).ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="648.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["SELECT TOP 1 * FROM [Periodic] WHERE StockId='"+in_stockId+ "' ORDER BY TradeDate DESC"]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:DatabaseConnect DatabaseConnection="[dbConn]" DisplayName="Connect Local" sap:VirtualizedContainerService.HintSize="648.8,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="[providerName]" ConnectionString="[sqlConnectionString]" />
        <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dbPeriodicResultDT]" DisplayName="Get lastest Periodic" ExistingDbConnection="[dbConn]" sap:VirtualizedContainerService.HintSize="648.8,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[dbQuery]">
          <ui:ExecuteQuery.Parameters>
            <scg:Dictionary x:TypeArguments="x:String, Argument" />
          </ui:ExecuteQuery.Parameters>
        </ui:ExecuteQuery>
        <If Condition="[dbPeriodicResultDT.Rows.Count &gt; 0]" DisplayName="If Valid retrival from Periodics" sap:VirtualizedContainerService.HintSize="648.8,538.4" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="375.2,388.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Periodic date is: &quot; + dbPeriodicResultDT.Rows(0)(2).ToString]" />
              <Assign sap:VirtualizedContainerService.HintSize="333.6,64" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[dbQuery]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">["SELECT  * FROM [Historical] WHERE StockId='"+in_stockId.ToString+ 
"' and TradeDate &gt; '" + dbPeriodicResultDT.Rows(0)(2).ToString+"'"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="" CommandType="Text" DataTable="[dbHistoricalResultDT]" DisplayName="Get all historical &gt; periodic date" ExistingDbConnection="[dbConn]" sap:VirtualizedContainerService.HintSize="333.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[dbQuery]">
                <ui:ExecuteQuery.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:ExecuteQuery.Parameters>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteQuery>
            </Sequence>
          </If.Then>
          <If.Else>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="No Periodics Records" />
          </If.Else>
        </If>
        <Assign sap:VirtualizedContainerService.HintSize="648.8,60" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[newHistoricalCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[dbHistoricalResultDT.Rows.Count]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
  </Flowchart>
</Activity>